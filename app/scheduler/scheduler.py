from loguru import logger

from app.database.models import ChatSchedule
from app.scheduler.add_or_remove_schedules import add_schedule_job
from app.scheduler.init_scheduler import scheduler


async def start_scheduler(settings):
    schedules = await ChatSchedule.filter(enabled=True).prefetch_related(
        "chat", "prompt", "company", "bot"
    )
    logger.debug(f"üëü –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫. –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(schedules)} –∑–∞–¥–∞—á")
    for schedule in schedules:
        add_schedule_job(schedule, settings)

    scheduler.start()
    logger.info("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω —Å –∑–∞–¥–∞—á–∞–º–∏ –∏–∑ –±–∞–∑—ã.")


def list_scheduled_jobs():
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.
    """
    for job in scheduler.get_jobs():
        logger.info(f"Job ID: {job.id}, trigger: {job.trigger}")


def clear_existing_jobs():
    """
    –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –∏–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞.
    """
    try:
        scheduler.remove_all_jobs()
        logger.info("–í—Å–µ –∑–∞–¥–∞—á–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Å–µ—Ö –∑–∞–¥–∞—á: {e}")
